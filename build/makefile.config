#
# MIT License
#
# Copyright(c) 2021 Jo√£o Vicente Souto <joaovicentesouto@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# Enable warnings and erros (C11 version)
export CFLAGS += -Wall -Werror
export CFLAGS += -std=c11

# Enable pthread
export CFLAGS += -pthread
export CFLAGS += -D_POSIX_C_SOURCE=200809L #-Wl,--no-undefined 

# Enable memory sanitizer
ifneq ($(OS),Windows_NT)
	ifneq ($(DISABLE_SANS),1)
		export CFLAGS += -fsanitize=address -fsanitize=undefined
	endif
endif

# Detect file dependencies (Not working)
# export CFLAGS += -MT $@ -MMD -MP -MF $(BINDIR)/$*.Td # DEPFLAGS

# Maps the include files
export CFLAGS += -I $(INCDIR)

# Extra
export CFLAGS += $(ADDONS)

# Optimization options
ifeq ($(RELEASE), true)
	# Turn Off Debug Sections
	export CFLAGS += -D NDEBUG
else
	# Build with Level 0 Optimization
	export CFLAGS += -O0
	# Further Help on Debugging
	export CFLAGS += -g

endif

ifneq ($(JOGADORES_POR_EQUIPE),)
export CFLAGS += -DDEFAULT_JOGADORES_POR_EQUIPE=$(JOGADORES_POR_EQUIPE)
endif
ifneq ($(GRUPO_MAX),)
export CFLAGS += -DDEFAULT_GRUPO_MAX=$(GRUPO_MAX)
endif
ifneq ($(GRUPO_MIN),)
export CFLAGS += -DDEFAULT_GRUPO_MIN=$(GRUPO_MIN)
endif
ifneq ($(DANO_MIN),)
export CFLAGS += -DDEFAULT_DANO_MIN=$(DANO_MIN)
endif
ifneq ($(DANO_MAX),)
export CFLAGS += -DDEFAULT_DANO_MAX=$(DANO_MAX)
endif
ifneq ($(DANO_CURA),)
export CFLAGS += -DDEFAULT_DANO_CURA=$(DANO_CURA)
endif
ifneq ($(DELAY_MIN),)
export CFLAGS += -DDEFAULT_DELAY_MIN=$(DELAY_MIN)
endif
ifneq ($(DELAY_MAX),)
export CFLAGS += -DDEFAULT_DELAY_MAX=$(DELAY_MAX)
endif
ifneq ($(DELAY_GERENTE),)
export CFLAGS += -DDEFAULT_DELAY_GERENTE=$(DELAY_GERENTE)
endif
ifneq ($(DELAY_LIMPADOR),)
export CFLAGS += -DDEFAULT_DELAY_LIMPADOR=$(DELAY_LIMPADOR)
endif
ifneq ($(PARTIDAS_MAX),)
export CFLAGS += -DDEFAULT_PARTIDAS_MAX=$(PARTIDAS_MAX)
endif
ifneq ($(PARTIDA_TEMPO_MAX),)
export CFLAGS += -DDEFAULT_PARTIDA_TEMPO_MAX=$(PARTIDA_TEMPO_MAX)
endif

export LDFLAGS = 

# Math extension
export LIBS += -lm -lpthread -fsanitize=address -lubsan

# Archiver Options
export ARFLAGS = rc
